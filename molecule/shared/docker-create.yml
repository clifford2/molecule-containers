# SPDX-FileCopyrightText: Â© 2025 Clifford Weinmann <https://www.cliffordweinmann.com/>
#
# SPDX-License-Identifier: MIT-0
#
# Example: https://ansible.readthedocs.io/projects/molecule/examples/docker/

---
- name: "Create"
  hosts: localhost
  gather_facts: false
  vars:
    molecule_inventory:
      all:
        hosts: {}
        children:
          molecule:
            hosts: {}

  tasks:

    # https://github.com/antmelekhin/docker-systemd
    - name: "Create a container"
      community.docker.docker_container:
        name: "{{ item.name }}"
        image: "{{ item.image }}"
        privileged: true
        cgroupns_mode: "host"
        capabilities: "{{ item.capabilities | default(omit) }}"
        state: "started"
        # command: "{{ item.command | default('sleep 1d') }}"
        command: "/sbin/init"
        log_driver: "json-file"
        detach: true
      register: molecule_docker_container_result
      loop: "{{ molecule_yml.platforms }}"

    - name: "Print some info"
      ansible.builtin.debug:
        msg: "{{ molecule_docker_container_result.results }}"

    - name: "Fail if container is not running"
      when: >
        item.container.State.ExitCode != 0 or
        not item.container.State.Running
      ansible.builtin.include_tasks:
        file: "docker-create-fail.yml"
      loop: "{{ molecule_docker_container_result.results }}"
      loop_control:
        label: "{{ item.container.Name }}"

    - name: "Add container to molecule_inventory"
      vars:
        inventory_partial_yaml: |
          all:
            children:
              molecule:
                hosts:
                  "{{ item.name }}":
                    ansible_connection: community.docker.docker
      ansible.builtin.set_fact:
        molecule_inventory: >
          {{ molecule_inventory | combine(inventory_partial_yaml | from_yaml, recursive=true) }}
      loop: "{{ molecule_yml.platforms }}"
      loop_control:
        label: "{{ item.name }}"

    - name: "Dump molecule_inventory"
      ansible.builtin.copy:
        content: |
          {{ molecule_inventory | to_yaml }}
        dest: "{{ molecule_ephemeral_directory }}/inventory/molecule_inventory.yml"
        mode: "0600"

    - name: "Force inventory refresh"
      ansible.builtin.meta: refresh_inventory

    - name: "Fail if molecule group is missing"
      ansible.builtin.assert:
        that: "'molecule' in groups"
        fail_msg: |
          molecule group was not found inside inventory groups: {{ groups }}
      run_once: true # noqa: run-once[task]

# we want to avoid errors like "Failed to create temporary directory"
- name: "Validate that inventory was refreshed"
  hosts: molecule
  gather_facts: false
  tasks:

    - name: "Check uname"
      ansible.builtin.raw: "uname -a"
      register: molecule_docker_uname_result
      changed_when: false

    - name: "Read /etc/os-release"
      ansible.builtin.slurp:
        path: "/etc/os-release"
      register: molecule_docker_osfile

    - name: "Show OS information"
      ansible.builtin.debug:
        msg:
          - "uname -a: {{ molecule_docker_uname_result.stdout }}"
          - "PRETTY_NAME: {{ molecule_docker_osfile.content | ansible.builtin.b64decode | ansible.builtin.regex_search('^PRETTY_NAME=\".+\"', multiline=True) | ansible.builtin.regex_replace('PRETTY_NAME=', '') | ansible.builtin.regex_replace('\"', '') }}"
