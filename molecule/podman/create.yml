# SPDX-FileCopyrightText: Â© 2025 Clifford Weinmann <https://www.cliffordweinmann.com/>
#
# SPDX-License-Identifier: BSD-2-Clause

---
- name: 'Create'
  hosts: localhost
  gather_facts: false
  vars:
    molecule_inventory:
      all:
        hosts: {}
        children:
          molecule:
            hosts: {}

  tasks:
    - name: 'Create a container'
      containers.podman.podman_container:
        name: "{{ item.name }}"
        image: "{{ item.image }}"
        privileged: "{{ item.privileged | default(omit) }}"
        volumes: "{{ item.volumes | default(omit) }}"
        capabilities: "{{ item.capabilities | default(omit) }}"
        systemd: "{{ item.systemd | default(omit) }}"
        state: started
        command: "{{ item.command | default('sleep 1d') }}"
        # bash -c "while true; do sleep 10000; done"
        log_driver: json-file
      register: result
      loop: "{{ molecule_yml.platforms }}"

    - name: 'Print some info'
      ansible.builtin.debug:
        msg: "{{ result.results }}"

    - name: 'Fail if container is not running'
      when: >
        item.container.State.ExitCode != 0 or
        not item.container.State.Running
      ansible.builtin.include_tasks:
        file: create-fail.yml
      loop: "{{ result.results }}"
      loop_control:
        label: "{{ item.container.Name }}"

    - name: 'Add container to molecule_inventory'
      vars:
        inventory_partial_yaml: |
          all:
            children:
              molecule:
                hosts:
                  "{{ item.name }}":
                    ansible_connection: containers.podman.podman
                    become_method: containers.podman.podman_unshare
                    ansible_user: root
      ansible.builtin.set_fact:
        molecule_inventory: >
          {{ molecule_inventory | combine(inventory_partial_yaml | from_yaml, recursive=true) }}
      loop: "{{ molecule_yml.platforms }}"
      loop_control:
        label: "{{ item.name }}"

    - name: 'Dump molecule_inventory'
      ansible.builtin.copy:
        content: |
          {{ molecule_inventory | to_yaml }}
        dest: "{{ molecule_ephemeral_directory }}/inventory/molecule_inventory.yml"
        mode: "0600"

    - name: 'Force inventory refresh'
      ansible.builtin.meta: refresh_inventory

    - name: 'Fail if molecule group is missing'
      ansible.builtin.assert:
        that: "'molecule' in groups"
        fail_msg: |
          molecule group was not found inside inventory groups: {{ groups }}
      run_once: true # noqa: run-once[task]

# we want to avoid errors like "Failed to create temporary directory"
- name: 'Validate that inventory was refreshed'
  hosts: molecule
  gather_facts: false
  tasks:

    - name: 'Check uname'
      ansible.builtin.raw: uname -a
      register: uname_result
      changed_when: false

    - name: 'Read /etc/os-release'
      ansible.builtin.slurp:
        path: /etc/os-release
      register: osfile

    - name: 'Show OS information'
      ansible.builtin.debug:
        msg:
          - "uname -a: {{ uname_result.stdout }}"
          - "PRETTY_NAME: {{ osfile.content | ansible.builtin.b64decode | ansible.builtin.regex_search('^PRETTY_NAME=\".+\"', multiline=True) | ansible.builtin.regex_replace('PRETTY_NAME=', '') | ansible.builtin.regex_replace('\"', '') }}"
